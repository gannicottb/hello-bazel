options:
  buildHeader: [ "load(\"@io_bazel_rules_scala//scala:scala_import.bzl\", \"scala_import\")",
    "load(\"@io_bazel_rules_scala//scala:scala.bzl\", \"scala_library\")" ]
  languages: [ "java", "scala:2.13.7" ]
  resolverType: "coursier"
  resolvers:
    - id: "sonatype"
      type: "default"
      url: https://oss.sonatype.org/content/repositories/public/
  strictVisibility: true
  thirdPartyDirectory: ""
  transitivity: exports
  versionConflictPolicy: highest

dependencies:
  ch.qos.logback:
    logback-classic:
      lang: scala/unmangled
      version: "1.2.3"

  co.fs2:
    fs2:
      lang: scala
      modules: [ "core", "io" ]
      version: "3.2.0"

  com.chuusai:
    shapeless:
      lang: scala

  com.fasterxml.jackson.core:
    jackson:
      lang: java
      modules: [ "core", "databind" ]

  com.fasterxml.jackson.dataformat:
    jackson-dataformat-yaml:
      lang: java
      version: "2.5.3"

  com.olegpy:
    better-monadic-for:
      lang: scala
      version: "0.3.1"

  io.circe:
    circe:
      lang: scala
      modules: [ "core", "jawn" ]
      version: "0.14.1"
    circe-generic:
      exports:
        - "com.chuusai:shapeless"
        - "org.typelevel:cats-core"
        - "org.typelevel:cats-kernel"
      lang: scala
      version: "0.14.1"

  io.get-coursier:
    coursier:
      lang: scala
      modules: [ "", "cache", "core", "util" ]
      version: "2.0.0-RC4-1"

  org.apache.maven:
    maven:
      lang: java
      modules: [ "aether-provider", "settings", "settings-builder" ]
      version: "3.3.9"

  org.eclipse.aether:
    aether:
      lang: java
      modules: [ "api", "connector-basic", "impl", "spi", "transport-file", "transport-http",
        "util" ]
      version: "1.1.0"

  org.eclipse.sisu:
    org.eclipse.sisu.plexus:
      lang: java
      version: "0.3.0"

  org.http4s:
    http4s:
      lang: scala
      modules: [ "circe", "dsl", "ember-client", "ember-server" ]
      version: "0.23.6"

  org.scala-lang.modules:
    scala-xml:
      lang: scala
      version: "2.0.1"

  org.scalacheck:
    scalacheck:
      lang: scala
      version: "1.14.1"

  org.scalactic:
    scalactic:
      lang: scala
      version: "3.2.10"

  org.scalatest:
    scalatest:
      exports:
        - "org.scalactic:scalactic"
      lang: scala
      version: "3.2.10"

  org.slf4j:
    slf4j:
      lang: java
      modules: [ "api", "simple" ]
      version: "1.7.25"

  org.sonatype.plexus:
    plexus-cipher:
      lang: java
      version: "1.7"
    plexus-sec-dispatcher:
      lang: java
      version: "1.3"

  org.typelevel:
    cats:
      exports:
        - "org.typelevel:cats-kernel"
      lang: scala
      modules: [ "effect", "effect-kernel", "effect-std" ]
      version: "3.2.9"
    cats-core:
      exports:
        - "org.typelevel:cats-kernel"
      lang: scala
      version: "2.6.1"
    cats-free:
      lang: scala
      version: "2.6.1"
    cats-kernel:
      lang: scala
      version: "2.6.1"
    kind-projector_2.13.7:
      lang: scala/unmangled
      version: "0.13.2"
    paiges-core:
      lang: scala
      version: "0.4.2"

replacements:
  org.scala-lang:
    scala-compiler:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_compiler//:io_bazel_rules_scala_scala_compiler"
    scala-library:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_library//:io_bazel_rules_scala_scala_library"
    scala-reflect:
      lang: scala/unmangled
      target: "@io_bazel_rules_scala_scala_reflect//:io_bazel_rules_scala_scala_reflect"

  org.scala-lang.modules:
    scala-parser-combinators:
      lang: scala
      target:
        "@io_bazel_rules_scala_scala_parser_combinators//:io_bazel_rules_scala_scala_parser_combinators"
    scala-xml:
      lang: scala
      target: "@io_bazel_rules_scala_scala_xml//:io_bazel_rules_scala_scala_xml"
